MEMORY {
	SIDE1A:  start = $0000, size = 65500, type = rw, file = %O, fill = yes, fillval = 0;
	PRG0:    start = $8000, size = $7ff6, type = rw, file = "";
	VEC1:    start = $dff6, size = $000a, type = rw, file = "";
	CHR2:    start = $0000, size = $2000, type = rw, file = "";
	CHK3:    start = $2000, size = $0001, type = rw, file = "";
}

SEGMENTS {
	SIDE1A:    load = SIDE1A, type = ro;

	FILE0_HDR: load = SIDE1A, type = ro;
	FILE0_DAT: load = SIDE1A, run = PRG0, type = rw, define = yes;

	FILE1_HDR: load = SIDE1A, type = ro;
	FILE1_DAT: load = SIDE1A, run = VEC1, define = yes;

	FILE2_HDR: load = SIDE1A, type = ro;
	FILE2_DAT: load = SIDE1A, run = CHR2, define = yes;

	FILE3_HDR: load = SIDE1A, type = ro;
	FILE3_DAT: load = SIDE1A, run = CHK3, define = yes;
	
	# Patches (it would be nice to overwrite segments directly instead of only memory areas with file outputs...)
	RESET_PATCH:    load = SIDE1A, start = $4b+$000b, type = overwrite;
	POINTER_PATCH0: load = SIDE1A, start = $4b+$024e, type = overwrite;
	POINTER_PATCH1: load = SIDE1A, start = $4b+$027f, type = overwrite;
	POINTER_PATCH2: load = SIDE1A, start = $4b+$0565, type = overwrite;
	POINTER_PATCH3: load = SIDE1A, start = $4b+$0859, type = overwrite;
	POINTER_PATCH4: load = SIDE1A, start = $4b+$085f, type = overwrite;
	POINTER_PATCH5: load = SIDE1A, start = $4b+$214e, type = overwrite;
	POINTER_PATCH6: load = SIDE1A, start = $4b+$2214, type = overwrite;
	POINTER_PATCH7: load = SIDE1A, start = $4b+$2228, type = overwrite;
	POINTER_PATCH8: load = SIDE1A, start = $4b+$222e, type = overwrite;
	POINTER_PATCH9: load = SIDE1A, start = $4b+$2233, type = overwrite;
	POINTER_PATCHA: load = SIDE1A, start = $4b+$25cc, type = overwrite;
}
